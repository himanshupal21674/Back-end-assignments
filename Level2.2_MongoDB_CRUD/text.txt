Level 2: Introduction to MongoDB | CRUD



1. Retrieve all the documents.
Ans-> To retrieve all documents from a collection, use the `find` method:
      db.employees.find({})
      This command returns a cursor to all documents in the collection, which can be iterated over to access each document.


2. Retrieve the first document.
Ans-> To get the first document from a collection, use the `findOne` method:
      db.employees.findOne({})
      This command returns the first document that matches the query criteria. If no criteria are specified, it returns the first document in the collection.


3. Update the age of the employee to 35 where the first_name is "Sidnee".
Ans-> To update a document, use the updateOne method. For example, to update the age of an employee with the first name "Sidnee" to 35:
      db.employees.updateOne({ first_name: "Sidnee" }, { $set: { age: 35 } })
      

4. Change the salary of "Meredeth Groveham" to 55000.
Ans-> To change the salary of "Meredeth Groveham" to 55000:
      db.employees.updateOne(
  { first_name: "Meredeth", last_name: "Groveham" },
  { $set: { salary: 55000 } }
)
 

5. Update the last name of "Nikolaus" to "Park".
Ans-> To update the last name of "Nikolaus" to "Park":
      db.employees.updateOne({ first_name: "Nikolaus" }, { $set: { last_name: "Park" } })
    

6. Update the salary of all employees to 35000 where the age is 37.
Ans-> To update the salary of all employees to 35000 where the age is 37:
      db.employees.updateMany({ age: 37 }, { $set: { salary: 35000 } })


7. Update the last name of all the employees to "Jamme" where the age is 28.
Ans-> To change the last name of all employees to "Jamme" where the age is 28:
      db.employees.updateMany({ age: 28 }, { $set: { last_name: "Jamme" } })


8. For all employees named "Kimbra", add a new field middle_name with the value "Marie".
Ans-> To add a new field middle_name with the value "Marie" for all employees named "Kimbra":
      db.employees.updateMany({ first_name: "Kimbra" }, { $set: { middle_name: "Marie" } })


9. Find all users who are 33 years old.
Ans-> To find all users who are 33 years old:
      db.employees.find({ age: 33 })


10. Retrieve documents for users with a salary greater than 50000.
Ans-> To retrieve documents for users with a salary greater than 50000:
      db.employees.find({ salary: { $gt: 50000 } })


11. Find all the users where the gender is Female and age is 79.
Ans-> To find all users where the gender is Female and age is 79:
      db.employees.find({ gender: "Female", age: 79 })


12. Find all the employees where the first_name is "George" and gender is Male.
Ans-> To find all employees where the first name is "George" and the gender is Male:
      db.employees.find({ first_name: "George", gender: "Male" })


13. Find all users whose salary is less than or equal to 50000.
Ans-> To find all users whose salary is less than or equal to 50000:
      db.employees.find({ salary: { $lte: 50000 } })
